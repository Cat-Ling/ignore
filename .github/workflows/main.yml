jobs:
  process_video:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        machine:
          - first-machine

    env:
      VIDEO_LINK: ${{ github.event.inputs.video_link }}
      PRESET: ${{ github.event.inputs.preset }}
      FPS: ${{ github.event.inputs.fps }}
      CRF: ${{ github.event.inputs.crf }}
      ENCODER: ${{ github.event.inputs.encoder }}
      ANAME: ${{ github.event.inputs.aname }}
      YTDLP_NO_LAZY_EXTRACTORS: true  # Add this line

    steps:
      - name: Display System Information
        run: |
          sudo apt-get update
          sudo apt-get install -y neofetch
          neofetch
      - name: Cloudflare WARP Setup
        run: |
          curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list
          sudo apt-get update
          sudo apt-get install -y cloudflare-warp
          sudo warp-cli --accept-tos registration new
      - name: Create Directories
        run: |
          mkdir -p videos
          mkdir -p artifacts
      - name: Install Dependencies
        run: |
          sudo apt-get install -y ffmpeg
          sudo apt install -y yt-dlp
          echo sudo pip install --upgrade yt-dlp --break-system-packages
      - name: Download Video
        run: |
          sudo warp-cli --accept-tos connect
          echo sudo warp-cli --accept-tos mode proxy
          echo sudo warp-cli --accept-tos proxy port 9091
          cd videos
          sudo nice -n -20 yt-dlp -o "input_video.%(ext)s" $VIDEO_LINK
      - name: Convert Video with H.264 Compression
        run: |
          cd videos
          VIDEO_TITLE=$(yt-dlp --get-title "$VIDEO_LINK" | sed 's/[^a-zA-Z0-9]/_/g')
          sudo nice -n -20 ffmpeg -i input_video.* -c:v $ENCODER -preset $PRESET -vf fps=$FPS -crf $CRF -max_muxing_queue_size 9999 -c:a aac -strict experimental "${VIDEO_TITLE}.mp4"
          rm -rf input_video.*
      - name: Upload to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.aname }}
          compression-level: 9
          path: videos/*.mp4
