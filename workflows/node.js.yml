name: Remote Desktop Workflow

on:
  push:
    branches:
      - main

jobs:
  remote-desktop:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Remote Desktop
      run: |
        # Install Chocolatey for package management
        Set-ExecutionPolicy Bypass -Scope Process -Force
        iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

        # Install required packages (Adjust as needed)
        choco install -y tightvnc

        # Start Remote Desktop server
        Start-Process "C:\Program Files\TightVNC\tvnserver.exe" -NoNewWindow

    - name: Display Remote Desktop
      run: |
        # Download VNC viewer for capturing screenshots
        Invoke-WebRequest -Uri "https://www.tightvnc.com/download/2.8.59/tightvnc-2.8.59-gpl-setup-64bit.msi" -OutFile "tightvnc.msi"
        Start-Process msiexec -Wait -ArgumentList "/i tightvnc.msi /quiet /norestart"

        # Connect to the Remote Desktop and capture screenshots (Adjust parameters)
        for ($i=1; $i -le 5; $i++) {
          Start-Process "C:\Program Files\TightVNC\tvnviewer.exe" -ArgumentList "127.0.0.1::5900" -NoNewWindow
          Start-Sleep -Seconds 30  # Adjust delay as needed

          # Capture screenshot
          Add-Type -AssemblyName System.Windows.Forms
          $screenshot = [System.Windows.Forms.Screen]::PrimaryScreen.Bounds
          $bitmap = New-Object System.Drawing.Bitmap $screenshot.Width, $screenshot.Height
          $graphics = [System.Drawing.Graphics]::FromImage($bitmap)
          $graphics.CopyFromScreen($screenshot.Location, [System.Drawing.Point]::Empty, $screenshot.Size)
          $bitmap.Save("screenshot_$i.png", [System.Drawing.Imaging.ImageFormat]::Png)
          
          # Close VNC viewer
          Stop-Process -Name "tvnviewer" -Force
        }
    
    - name: Upload Screenshots
      uses: actions/upload-artifact@v2
      with:
        name: screenshots
        path: screenshot_*.png

    - name: Sleep and repeat
      run: |
        # Adjust sleep time (seconds) and loop count as needed
        for ($i=1; $i -le 10; $i++) {
          Start-Sleep -Seconds 300  # Sleep for 5 minutes
          
          # Restart Remote Desktop server
          Stop-Process -Name "tvnserver" -Force
          Start-Process "C:\Program Files\TightVNC\tvnserver.exe" -NoNewWindow
        }
